// -------------------------
// = Mixins
// -------------------------


// Link Style

@mixin link-style() {

	text-decoration: none;
	color: $secondary-color;
	border-bottom: $secondary-color 2px solid;
	transition: .2s ease-in-out;
	
	&:hover {
		border-bottom-width: 4px;
	}
	&.focus-visible {
		background-color: $secondary-color;
		color: #fff;
	}
	&:visited {
		color: $text-color;
		border-bottom-color: $text-color;
		border-bottom-width: 1px;
	}
	&:visited:focus {
		color: #fff;
	}
	&:active {
		color: $secondary-color;
		border-bottom-color: transparent;
	}	
}

// Center mode

@mixin center() {
	position: relative;
	margin-left: auto; 
	margin-right: auto;
	max-width: $max-width;	
}

// Visually obfuscate the text of an element (a11y ok)

@mixin a11y-hide($percent: 150%) {
	text-indent: $percent;
	white-space: nowrap;
	overflow: hidden;
}

// Visually hide an element (a11y ok)

@mixin a11y-hidden($width: 1px, $height: 1px) {
	position: absolute;
	display: block; 
	width: $width;
	height: $height;
	padding: 0;
	margin: 0;
	text-indent: 150%;
	white-space: nowrap;
	overflow: hidden;	
}

// Extend the click area to the entire block 

@mixin linkblock() {
	content: '';
	position: absolute;
	top: 0; 
	left: 0; 
	right: 0; 
	bottom: 0;
	z-index: 100;	
}

// Opacity effect on hovered images links

@mixin img-opacity($opacity: .5) {
	a img {
		transition: opacity .2s ease-in-out;
	}
	a:hover img,
	a.focus-visible img {
		opacity: $opacity;
	}	
}

// Add a pointer on ::before or ::after

@mixin pointer($orientation:top, $width:10px) {
	
	content: '';
	display: block; 
	width: 0; 
	height: 0;
	border-color: transparent; 
	border-width: $width;
	border-style: solid;

	@if $orientation == top {
		border-top-color: inherit;
	}
	@else if $orientation == bottom {
		border-bottom-color: inherit;
	}
	@else if $orientation == left {
		border-left-color: inherit;
	}
	@else if $orientation == right {
		border-right-color: inherit;
	}
	@else {
		border-top-color: inherit;
	}
	
}


// Mobile First Media Queries

@mixin rwd($width) {
	
	@if $width == xwide {
		@media only screen and (min-width: $width-xwide) {
			@content;
		}
	}
	@if $width == wide {
		@media only screen and (min-width: $width-wide) {
			@content;
		}
	}
	@else if $width == large {
		@media only screen and (min-width: $width-large) {
			@content;
		}
	}
	@else if $width == medium {
		@media only screen and (min-width: $width-medium) {
			@content;
		}
	}
	@else if $width == small {
		@media only screen and (min-width: $width-small) {
			@content;
		}
	}
	@else {
		@media only screen and (min-width: $width) {
			@content;
		}
	}
}